---
- name: "create directory"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: _vpn
    group: _vpn
    mode: 0700
  loop:
    - "/var/vpns/xray"
    - "/var/vpns/xray/bin"
    - "/var/vpns/xray/etc"

- name: "install necessary utils"
  community.general.openbsd_pkg:
    name:
      - unzip--
      - curl--
      - rsync--
      - jq--
    state: present

- name: "create temporary directory"
  ansible.builtin.tempfile:
    state: directory
    suffix: temp
  register: xray_tempdir
  notify:
    - remove_xray_tempdir

- name: "get latest version"
  ansible.builtin.shell: 'curl --silent "https://api.github.com/repos/XTLS/Xray-core/releases/latest" | jq -r .tag_name'
  register: xray_latest_version

- name: "download latest version"
  ansible.builtin.get_url:
    url: "https://github.com/XTLS/Xray-core/releases/download/{{ xray_latest_version.stdout }}/Xray-openbsd-64.zip"
    dest: "{{ xray_tempdir.path }}/xray.zip"

- name: "unzip xray"
  ansible.builtin.unarchive:
    src: "{{ xray_tempdir.path }}/xray.zip"
    dest: "{{ xray_tempdir.path }}"
    remote_src: yes

- name: "copy chroot dependencies"
  ansible.builtin.shell: "xray_deps=$(ldd /var/vpns/xray | awk 'FNR > 3 {print $7}'); for dep in $deps; do rsync -av --relative $dep /var/vpns/xray; done"

- name: "template out init script"
  ansible.builtin.template:
    src: "{{ item.file_src }}"
    dest: "{{ item.file_dest }}"
  loop:
    - file_src: xray.rc.j2
      file_dest: "{{ xray_tempdir.path }}/xray.rc"

- name: "install xray"
  ansible.builtin.shell: "{{ item }}"
  loop:
    - "install -m 750 -g bin {{ xray_tempdir.path }}/xray /var/vpns/xray/bin/xray"
    - "install -m 755 -g bin {{ xray_tempdir.path }}/xray.rc /etc/rc.d/xray"
    - "install -m 755 -g bin {{ xray_tempdir.path }}/geoip.dat /var/vpns/xray/bin/geoip.dat"
    - "install -m 755 -g bin {{ xray_tempdir.path }}/geosite.dat /var/vpns/xray/bin/geosite.dat"
